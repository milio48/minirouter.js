// minirouter.js v1
class minirouterjs{constructor(t="",e=!1){this.routes=[],this.baseUrl=t,this.hashMode=e,this.notFoundCallback=null,this.beforeHook=null,this.afterHook=null,new MutationObserver((()=>this.updateLinks())).observe(document.body,{childList:!0,subtree:!0}),this.init()}init(){document.addEventListener("click",(t=>{const e=t.target.closest("a");if(e&&e.href){if(e.hasAttribute("data-router")&&"false"===e.getAttribute("data-router"))return;t.preventDefault(),this.handleLinkClick(e)}})),window.addEventListener("popstate",(()=>{if(this.hashMode&&document.querySelectorAll(`[href="${window.location.hash}"][data-router="false"]`).length>0)return!1;this.handleNavigation(window.location.pathname+window.location.search)})),window.addEventListener("DOMContentLoaded",(()=>{let t=window.location.pathname;this.hashMode&&(t=window.location.hash?window.location.hash.replace("#",""):"/"),this.go(t+window.location.search)}))}updateLinks(){let t=this.hashMode?"/#":"";document.querySelectorAll("a").forEach((e=>{e.hasAttribute("data-router")&&"false"===e.getAttribute("data-router")||(e.getAttribute("href").startsWith("http")||e.getAttribute("href").startsWith(this.baseUrl)?!this.hashMode||e.getAttribute("href").startsWith("/#/")||e.getAttribute("href").startsWith("./")||e.getAttribute("href").startsWith("../")||(e.href=t+this.baseUrl+e.getAttribute("href")):e.getAttribute("href").startsWith("./")||e.getAttribute("href").startsWith("../")?e.href=t+this.baseUrl+"/"+e.getAttribute("href"):e.href=t+this.baseUrl+e.getAttribute("href"))}))}go(t,e){t.startsWith("http")||t.startsWith(this.baseUrl)||(t=t.startsWith("./")||t.startsWith("../")?this.baseUrl+"/"+t:this.baseUrl+t),this.hashMode&&(t=`#${t}`),this.navigate(t,e)}handleLinkClick(t){const e=t.href,r=this.getPathFromHref(e);r.startsWith(this.baseUrl)?this.navigate(r,t):window.location.href=e}handleNavigation(t){this.beforeHook&&!1===this.beforeHook(t)||(this.hashMode&&window.location.hash&&(t=window.location.hash.replace("#","")),this.route(t.replace(this.baseUrl,"")))}getPathFromHref(t){const e=new URL(t,window.location.origin);let r=this.hashMode?e.hash.replace("#",""):e.pathname;return e.search&&(r+=e.search),r}navigate(t,e){if(this.beforeHook&&!1===this.beforeHook(t))return;this.hashMode&&(t=t.replace("/#/","")),this.hashMode?(t=t.startsWith("#")?t.slice(1):t,history.pushState({},"",`#${t}`)):history.pushState({},"",t);let r=t.replace(this.baseUrl,"")||"/";this.route(r,e)}route(t,e){for(const{pattern:r,callback:a}of this.routes){const s=this.matchRoute(r,t);if(s)return a(s,e),void(this.afterHook&&this.afterHook(t,e))}this.notFoundCallback?this.notFoundCallback(t,e):console.log(`No route matched for: ${t}`)}matchRoute(t,e){const[r,a]=t.split("?"),[s,o]=e.split("?"),h=new RegExp("^"+r.replace(/:\w+/g,"([^/]+)")+"$"),i=s.match(h);if(i){const t={param:e,query:{}};if((r.match(/:\w+/g)||[]).forEach(((e,r)=>{t[e.substring(1)]=i[r+1]})),o){const e=new URLSearchParams(o);for(const[r,a]of e)t.query[r]=a}return t}return null}set(t,e){this.routes.push({pattern:t,callback:e})}setNotFound(t){this.notFoundCallback=t}setBefore(t){this.beforeHook=t}setAfter(t){this.afterHook=t}escapeHTML(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}unescapeHTML(t){return t.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#039;/g,"'")}}